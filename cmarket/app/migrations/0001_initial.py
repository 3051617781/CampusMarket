# Generated by Django 4.2.14 on 2024-08-06 10:31

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Circle",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100, verbose_name="圈子名称")),
                ("description", models.TextField(verbose_name="圈子描述")),
                ("avatar", models.URLField(verbose_name="圈子头像URL")),
                (
                    "notice",
                    models.TextField(blank=True, null=True, verbose_name="圈子公告"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="是否通过认证"),
                ),
                ("is_frozen", models.BooleanField(default=False, verbose_name="是否冻结")),
                ("like_number", models.IntegerField(default=0, verbose_name="点赞数")),
                ("collect_number", models.IntegerField(default=0, verbose_name="收藏数")),
                ("fan_number", models.IntegerField(default=0, verbose_name="粉丝数")),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "wechat_openid",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="微信OpenID",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "phone",
                    models.CharField(max_length=11, unique=True, verbose_name="手机号"),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("male", "男"), ("female", "女"), ("unknow", "未知")],
                        max_length=10,
                        verbose_name="性别",
                    ),
                ),
                ("avatar", models.URLField(verbose_name="头像URL")),
                ("nickname", models.CharField(max_length=50, verbose_name="昵称")),
                (
                    "signature",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="个性签名"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        unique=True,
                        verbose_name="邮箱",
                    ),
                ),
                (
                    "birthday",
                    models.DateField(blank=True, null=True, verbose_name="生日"),
                ),
                (
                    "height",
                    models.IntegerField(blank=True, null=True, verbose_name="身高"),
                ),
                (
                    "background_image",
                    models.URLField(blank=True, null=True, verbose_name="背景图URL"),
                ),
                (
                    "hometown",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="家乡"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="是否通过认证"),
                ),
                ("is_frozen", models.BooleanField(default=False, verbose_name="是否冻结")),
                ("like_number", models.IntegerField(default=0, verbose_name="点赞数")),
                ("fan_number", models.IntegerField(default=0, verbose_name="粉丝数")),
                ("follow_number", models.IntegerField(default=0, verbose_name="关注数")),
            ],
        ),
        migrations.CreateModel(
            name="School",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100, verbose_name="学校名称")),
            ],
        ),
        migrations.CreateModel(
            name="SchoolRegion",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100, verbose_name="校区名称")),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="regions",
                        to="app.school",
                        verbose_name="所属学校",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=200, verbose_name="标题")),
                ("content", models.TextField(verbose_name="内容")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                ("is_frozen", models.BooleanField(default=False, verbose_name="是否冻结")),
                ("like_number", models.IntegerField(default=0, verbose_name="点赞数")),
                ("collect_number", models.IntegerField(default=0, verbose_name="收藏数")),
                ("comment_number", models.IntegerField(default=0, verbose_name="评论数")),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posts",
                        to="app.customuser",
                        verbose_name="作者",
                    ),
                ),
                (
                    "circle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posts",
                        to="app.circle",
                        verbose_name="所属圈子",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "content",
                    models.TextField(blank=True, null=True, verbose_name="通知内容"),
                ),
                ("status", models.BooleanField(default=False, verbose_name="状态")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "receiver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="app.customuser",
                        verbose_name="接收用户",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_notifications",
                        to="app.customuser",
                        verbose_name="事件发送者",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="customuser",
            name="region",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="students",
                to="app.schoolregion",
                verbose_name="所在校区",
            ),
        ),
        migrations.AddField(
            model_name="customuser",
            name="school",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="students",
                to="app.school",
                verbose_name="所在学校",
            ),
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("content", models.TextField(verbose_name="评论内容")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                ("like_number", models.IntegerField(default=0, verbose_name="点赞数")),
                ("reply_number", models.IntegerField(default=0, verbose_name="回复数")),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="app.customuser",
                        verbose_name="作者",
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="app.post",
                        verbose_name="所属帖子",
                    ),
                ),
                (
                    "reply_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="replies",
                        to="app.comment",
                        verbose_name="回复目标",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="circle",
            name="creator",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="circles",
                to="app.customuser",
                verbose_name="创建者",
            ),
        ),
        migrations.AddField(
            model_name="circle",
            name="school",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="circles",
                to="app.school",
                verbose_name="所属学校",
            ),
        ),
    ]
